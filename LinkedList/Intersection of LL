class Solution {
public:
    // Helper to get length of a list
    int getLength(ListNode* head) {
        int len = 0;
        while (head) {
            len++;
            head = head->next;
        }
        return len;
    }

    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        int lenA = getLength(headA);
        int lenB = getLength(headB);

        // Align both lists by moving the head of longer list
        while (lenA > lenB) {
            headA = headA->next;
            lenA--;
        }
        while (lenB > lenA) {
            headB = headB->next;
            lenB--;
        }

        // Traverse both together to find intersection
        while (headA && headB) {
            if (headA == headB) return headA; // Intersection found
            headA = headA->next;
            headB = headB->next;
        }

        return nullptr; // No intersection
    }
};
